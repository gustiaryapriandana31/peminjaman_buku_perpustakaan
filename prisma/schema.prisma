// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model Admin {
  id              Int      @id @default(autoincrement())
  name            String
  email           String   @unique
  password        String 
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  peminjaman Peminjaman[]
}


model Buku {
  id              Int      @id @default(autoincrement())
  judulBuku       String
  penulis         String
  penerbit        String
  kategori        String
  tanggalTerbit   DateTime
  jumlahHalaman   Int
  noisbn          String   @unique
  stokBuku        Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  detail_peminjaman DetailPeminjaman[]
}

enum StatusPengembalian {
  Belum_Dikembalikan
  Dikembalikan
}

model Peminjaman {
  id                String      @id @default(uuid())
  idAdmin           Int
  namaPeminjam      String
  kelas             String
  tglPeminjaman     DateTime
  tglPengembalian   DateTime
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  admin             Admin       @relation(fields: [idAdmin], references: [id])
  detail_peminjaman DetailPeminjaman[]
}

model DetailPeminjaman {
  id                Int         @id @default(autoincrement())
  idPeminjaman      String
  idBuku            Int      
  statusPengembalian StatusPengembalian @default(Belum_Dikembalikan)
  jumlahDipinjam    Int         @default(1)
  denda             Int?
  alasanDenda       String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  peminjaman        Peminjaman  @relation(fields: [idPeminjaman], references: [id])
  buku              Buku        @relation(fields: [idBuku], references: [id])
}